install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/rsean/Desktop/Bootcamp Data Sets/R_Analysis")
x <-3
x<-5
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
numlist <-[4]
numlist <- [4]
numlist[4]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
View(filter_table2)
View(filter_table2)
View(filter_table2)
View(filter_table2)
View(filter_table2)
View(demo_table2)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
?gather()
library(tidyverse)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
?ggplot()
head(mpg)
plt <- ggplot(mpg,aes(x=class))
plt + geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count))
plt + geom_col()
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep')
view(mpg_summary)
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
plt + geom_abline()
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(16:30))
plt <- ggplot(mpg,aes(x=displ,y=cty))
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)")
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class")
plt <- ggplot(mpg,aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
setwd("C:/Users/rsean/Desktop/Bootcamp Data Sets/Repository/Amazon_Vine_Analysis")
# USE THE LIBRARY FUNCTION TO LOAD REQUIRED PACKAGES
library(dplyr)
library(tidyverse)
# IMPORT AND READ REQUIRED CSV FILE AS DATAFRAME
vine_reviews <- read.csv('DATA/vine_reviews.csv')
head(vine_reviews)
# OBTAIN THE MEAN, MEDIAN, VARIANCE AND STANDARD DEVIATION OF THE DATAFRAMES PSI COLUMN
total_summary <- vine_reviews %>% summarize(Mean=mean(star_rating), Median=median(star_rating), Variance=var(star_rating), SD=sd(star_rating))
print(total_summary)
# OBTAIN THE MEAN, MEDIAN, VARIANCE AND STANDARD DEVIATION OF THE DATAFRAMES PSI COLUMN GROUPED BY LOT
vine_summary <- vine_reviews %>% group_by(vine) %>% summarize(Mean=mean(star_rating), Median=median(star_rating), Variance=var(star_rating), SD=sd(star_rating), .groups = 'keep')
print(vine_summary)
# CONDUCT TWO-SAMPLE T-TEST TO COMPARE PAID RATINGS TO UNPAID RATINGS
t.test(subset(vine_reviews, vine == "Y")$star_rating, subset(vine_reviews, vine == "N")$star_rating)
# USE THE LIBRARY FUNCTION TO LOAD REQUIRED PACKAGES
library(dplyr)
library(tidyverse)
# IMPORT AND READ REQUIRED CSV FILE AS DATAFRAME
vine_reviews <- read.csv('DATA/vine_reviews.csv')
head(vine_reviews)
# OBTAIN THE MEAN, MEDIAN, VARIANCE AND STANDARD DEVIATION OF THE DATAFRAMES "star_rating" COLUMN
total_summary <- vine_reviews %>% summarize(Mean=mean(star_rating), Median=median(star_rating), Variance=var(star_rating), SD=sd(star_rating))
print(total_summary)
# OBTAIN THE MEAN, MEDIAN, VARIANCE AND STANDARD DEVIATION OF THE DATAFRAMES "star_rating" COLUMN GROUPED BY VINE MEMBERSHIP
vine_summary <- vine_reviews %>% group_by(vine) %>% summarize(Mean=mean(star_rating), Median=median(star_rating), Variance=var(star_rating), SD=sd(star_rating), .groups = 'keep')
print(vine_summary)
# CONDUCT TWO-SAMPLE T-TEST TO COMPARE PAID RATINGS TO UNPAID RATINGS
t.test(subset(vine_reviews, vine == "Y")$star_rating, subset(vine_reviews, vine == "N")$star_rating)
